[versions]
kotlin = "2.0.20"
ktor = "2.3.12"
spring = "3.3.3"
dependency-management = "1.1.6"
serialization = "1.7.2"
exposed = "0.54.0"
firebase = "9.3.0"
logback = "1.5.7"
coroutines = "1.9.0-RC.2"
mockk = "1.13.12"
springmockk = "4.0.2"
spotless = "6.22.0"

[libraries]
firebase-admin = { group = "com.google.firebase", name = "firebase-admin", version.ref = "firebase" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "coroutines" }
spring-boot-starter-data-jdbc = { group = "org.springframework.boot", name = "spring-boot-starter-data-jdbc" }
spring-boot-starter-web = { group = "org.springframework.boot", name = "spring-boot-starter-web" }
spring-boot-devtools = { group = "org.springframework.boot", name = "spring-boot-devtools" }
spring-boot-starter-security = { group = "org.springframework.boot", name = "spring-boot-starter-security" }
spring-security-test = { group = "org.springframework.security", name = "spring-security-test" }
spring-boot-starter-oauth2-client = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-client" }

ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio-jvm", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
logback-classic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }

exposed = { group = "org.jetbrains.exposed", name = "exposed-spring-boot-starter", version.ref = "exposed" }
exposed-java-time = { group = "org.jetbrains.exposed", name = "exposed-java-time", version.ref = "exposed" }

h2 = { group = "com.h2database", name = "h2" }
postgresql = { group = "org.postgresql", name = "postgresql" }

spring-boot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
kotlin-test-junit5 = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit5" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
spring-mockk = { group = "com.ninja-squad", name = "springmockk", version.ref = "springmockk" }

[bundles]
coroutines = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-reactor",
]

exposed = [
    "exposed",
    "exposed-java-time",
]

ktor = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json",
    "logback-classic",
]

mockk = [
    "mockk",
    "spring-mockk",
]

[plugins]
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
spring = { id = "org.springframework.boot", version.ref = "spring" }
dependency-management = { id = "io.spring.dependency-management", version.ref = "dependency-management" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
